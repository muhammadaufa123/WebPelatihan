@startuml WebPelatihan_Talent_Focus_ERD
!define ENTITY(x) class x << (E,#FFAAAA) >>
!define LOOKUP(x) class x << (L,#AAFFAA) >>
!define BRIDGE(x) class x << (B,#AAAAFF) >>

title WebPelatihan - Talent Scouting & Project Management (Focused ERD)

' Core User Management (Simplified)
ENTITY(users) {
  == PRIMARY KEY ==
  +id: BIGINT PK
  == BASIC USER DATA ==
  name: VARCHAR NOT NULL
  email: VARCHAR UNIQUE NOT NULL
  phone: VARCHAR NULLABLE
  location: VARCHAR NULLABLE
  == TALENT SCOUTING FIELDS ==
  available_for_scouting: BOOLEAN NOT NULL
  talent_skills: JSON NULLABLE
  monthly_salary_expectation: DECIMAL(10,2) NULLABLE
  hourly_rate: DECIMAL(8,2) NULLABLE
  talent_bio: TEXT NULLABLE
  portfolio_url: VARCHAR NULLABLE
  experience_level: ENUM(beginner,intermediate,advanced,expert) NULLABLE
  is_active_talent: BOOLEAN NOT NULL
  == SYSTEM FIELDS ==
  timestamps
}

' Talent Scouting System
ENTITY(talent_admins) {
  == PRIMARY KEY ==
  +id: BIGINT PK
  == FOREIGN KEYS ==
  user_id: BIGINT FK NOT NULL
  == DATA FIELDS ==
  is_active: BOOLEAN NOT NULL
  == SYSTEM FIELDS ==
  soft_deletes, timestamps
}

ENTITY(talents) {
  == PRIMARY KEY ==
  +id: BIGINT PK
  == FOREIGN KEYS ==
  user_id: BIGINT FK NOT NULL
  == DATA FIELDS ==
  is_active: BOOLEAN NOT NULL
  scouting_metrics: JSON NULLABLE
  == SYSTEM FIELDS ==
  soft_deletes, timestamps
}

ENTITY(recruiters) {
  == PRIMARY KEY ==
  +id: BIGINT PK
  == FOREIGN KEYS ==
  user_id: BIGINT FK NOT NULL
  == COMPANY DATA ==
  company_name: VARCHAR NULLABLE
  industry: VARCHAR NULLABLE
  company_size: VARCHAR NULLABLE
  website: VARCHAR NULLABLE
  company_description: TEXT NULLABLE
  phone: VARCHAR NULLABLE
  address: TEXT NULLABLE
  == DATA FIELDS ==
  is_active: BOOLEAN NOT NULL
  == SYSTEM FIELDS ==
  soft_deletes, timestamps
}

ENTITY(talent_requests) {
  == PRIMARY KEY ==
  +id: BIGINT PK
  == FOREIGN KEYS ==
  recruiter_id: BIGINT FK NOT NULL
  talent_id: BIGINT FK NOT NULL
  talent_user_id: BIGINT FK NOT NULL
  == PROJECT DATA ==
  project_title: VARCHAR NOT NULL
  project_description: TEXT NOT NULL
  requirements: TEXT NULLABLE
  budget_range: VARCHAR NULLABLE
  project_duration: VARCHAR NULLABLE
  == STATUS TRACKING ==
  status: ENUM(pending,approved,meeting_arranged,agreement_reached,onboarded,rejected,completed) NOT NULL
  talent_accepted: BOOLEAN NOT NULL
  admin_accepted: BOOLEAN NOT NULL
  both_parties_accepted: BOOLEAN NOT NULL
  == TIME BLOCKING ==
  project_start_date: DATETIME NULLABLE
  project_end_date: DATETIME NULLABLE
  is_blocking_talent: BOOLEAN NOT NULL
  blocking_notes: TEXT NULLABLE
  == WORKFLOW TIMESTAMPS ==
  talent_accepted_at: TIMESTAMP NULLABLE
  admin_accepted_at: TIMESTAMP NULLABLE
  meeting_arranged_at: TIMESTAMP NULLABLE
  onboarded_at: TIMESTAMP NULLABLE
  workflow_completed_at: TIMESTAMP NULLABLE
  == PROJECT SYSTEM MIGRATION ==
  project_id: BIGINT FK NULLABLE
  migrated_to_project_system: BOOLEAN NOT NULL
  migrated_at: TIMESTAMP NULLABLE
  == SYSTEM FIELDS ==
  soft_deletes, timestamps
}

' Project-Centric System (New)
ENTITY(projects) {
  == PRIMARY KEY ==
  +id: BIGINT PK
  == FOREIGN KEYS ==
  recruiter_id: BIGINT FK NOT NULL
  == PROJECT DATA ==
  title: VARCHAR NOT NULL
  description: TEXT NOT NULL
  industry: VARCHAR NULLABLE
  general_requirements: TEXT NULLABLE
  == BUDGET & TIMELINE ==
  overall_budget_min: DECIMAL(10,2) NULLABLE
  overall_budget_max: DECIMAL(10,2) NULLABLE
  expected_start_date: DATE NOT NULL
  expected_end_date: DATE NOT NULL
  estimated_duration_days: INTEGER NOT NULL
  == STATUS MANAGEMENT ==
  status: ENUM(draft,pending_admin,approved,active,overdue,extension_requested,closure_requested,completed,cancelled) NOT NULL
  == CLOSURE WORKFLOW ==
  closure_requested_by: BIGINT FK NULLABLE
  closure_approved_by: BIGINT FK NULLABLE
  closure_requested_at: TIMESTAMP NULLABLE
  closure_approved_at: TIMESTAMP NULLABLE
  closure_reason: TEXT NULLABLE
  == SYSTEM FIELDS ==
  timestamps
}

ENTITY(project_assignments) {
  == PRIMARY KEY ==
  +id: BIGINT PK
  == FOREIGN KEYS ==
  project_id: BIGINT FK NOT NULL
  talent_id: BIGINT FK NOT NULL
  == ASSIGNMENT DETAILS ==
  specific_role: VARCHAR NOT NULL
  talent_start_date: DATE NOT NULL
  talent_end_date: DATE NOT NULL
  individual_budget: DECIMAL(10,2) NULLABLE
  specific_requirements: TEXT NULLABLE
  working_hours_per_week: INTEGER NOT NULL
  priority_level: ENUM(low,medium,high) NOT NULL
  assignment_notes: TEXT NULLABLE
  == STATUS MANAGEMENT ==
  status: ENUM(assigned,admin_pending,talent_pending,accepted,active,completed) NOT NULL
  talent_accepted_at: TIMESTAMP NULLABLE
  == SYSTEM FIELDS ==
  timestamps
}

ENTITY(project_timeline_events) {
  == PRIMARY KEY ==
  +id: BIGINT PK
  == FOREIGN KEYS ==
  project_id: BIGINT FK NOT NULL
  user_id: BIGINT FK NULLABLE
  == EVENT DATA ==
  event_type: ENUM(created,approved,rejected,cancelled,talent_assigned,talent_accepted,talent_rejected,extension_requested,extension_approved,extension_rejected,extended,overdue,closure_requested,completed,conflict_detected,conflict_resolved,notification_sent) NOT NULL
  description: TEXT NOT NULL
  event_data: JSON NULLABLE
  == SYSTEM FIELDS ==
  timestamps
}

ENTITY(project_extensions) {
  == PRIMARY KEY ==
  +id: BIGINT PK
  == FOREIGN KEYS ==
  project_id: BIGINT FK NOT NULL
  conflict_id: BIGINT FK NULLABLE
  requested_by: BIGINT FK NOT NULL
  == EXTENSION DETAILS ==
  original_end_date: DATE NOT NULL
  requested_end_date: DATE NOT NULL
  extension_days: INTEGER NOT NULL
  extension_reason: TEXT NOT NULL
  additional_budget: DECIMAL(10,2) NOT NULL
  urgency_level: ENUM(low,medium,high,critical) NOT NULL
  triggered_by_talent_addition: BOOLEAN NOT NULL
  == TIMESTAMPS ==
  requested_at: TIMESTAMP NOT NULL
  == SYSTEM FIELDS ==
  timestamps
}

ENTITY(timeline_conflicts) {
  == PRIMARY KEY ==
  +id: BIGINT PK
  == FOREIGN KEYS ==
  project_id: BIGINT FK NOT NULL
  assignment_id: BIGINT FK NULLABLE
  == CONFLICT DETAILS ==
  conflict_type: ENUM(duration_overrun,late_addition,availability_clash,budget_mismatch) NOT NULL
  severity: ENUM(low,medium,high,critical) NOT NULL
  detected_at: TIMESTAMP NOT NULL
  project_end_date: DATE NOT NULL
  talent_proposed_end_date: DATE NOT NULL
  overrun_days: INTEGER NOT NULL
  overrun_percentage: DECIMAL(5,2) NOT NULL
  == SYSTEM FIELDS ==
  timestamps
}

' ===== RELATIONSHIPS =====

' Talent Scouting System
users ||--|| talent_admins : "user_id"
users ||--|| talents : "user_id"
users ||--|| recruiters : "user_id"
recruiters ||--o{ talent_requests : "recruiter_id"
talents ||--o{ talent_requests : "talent_id"
users ||--o{ talent_requests : "talent_user_id"

' Project-Centric System
recruiters ||--o{ projects : "recruiter_id"
projects ||--o{ talent_requests : "project_id"
projects ||--o{ project_assignments : "project_id"
talents ||--o{ project_assignments : "talent_id"
projects ||--o{ project_timeline_events : "project_id"
users ||--o{ project_timeline_events : "user_id"
projects ||--o{ project_extensions : "project_id"
timeline_conflicts ||--o{ project_extensions : "conflict_id"
users ||--o{ project_extensions : "requested_by"
projects ||--o{ timeline_conflicts : "project_id"
project_assignments ||--o{ timeline_conflicts : "assignment_id"

note right of users
  **Multi-Role User System**:
  Users can be Talents, Recruiters, or Admins

  **Talent Skills Integration**:
  • Skills from LMS course completion
  • Manual skill additions
  • Portfolio and experience tracking
  • Salary expectation management
end note

note bottom of talent_requests
  **Enhanced Workflow**:
  pending → approved → meeting_arranged → onboarded → completed

  **Key Features**:
  • **Dual Acceptance**: talent + admin approval required
  • **Time Blocking**: prevents scheduling conflicts
  • **Project Integration**: Links to project-centric system
  • **Auto-Completion**: When project closes, related requests auto-complete

  **Status Flow**:
  1. Recruiter creates request → pending
  2. Admin reviews → approved/rejected
  3. Talent accepts → meeting_arranged
  4. Onboarding complete → onboarded
  5. Project closure → completed (auto)
end note

note right of projects
  **Project Lifecycle**:
  draft → pending_admin → approved → active → completed/cancelled

  **Closure System**:
  • Recruiters request closure → closure_requested
  • Admin approves → completed
  • Auto-complete all related talent_requests
  • Timeline events track the entire process

  **Timeline Management**:
  • Extensions for overruns
  • Conflict detection
  • Multi-talent coordination
end note

note bottom of project_assignments
  **Assignment Management**:
  • Individual talent assignments within projects
  • Specific roles and requirements per talent
  • Independent acceptance workflow
  • Budget allocation per assignment
  • Timeline coordination with project closure
end note

@enduml
